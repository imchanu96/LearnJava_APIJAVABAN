package ezen.nine;

public class PackageTest {

	public static void main(String[] args) {
		
//		ctrl + h 파일에 있는 것 찾기 기능
		
		/*
		패키지(Package)
		  
		  
	  	클래스의 묶음이다
	  	서로 관련된 클래스들 끼리 그룹 단위로 묶어 놓음으로써 클래스를
	  	효율적으로 관리할 수 있다.
	  
	  	다른 개발자가 개발한 클래스 라이브러리 의 클래스와 이름이 충돌하는 것을 피할 수 있다.
	  
	  	클래스의 실제 이름은 패키지명을 포함한 것이다(full name)
	  
	  	같은 이름의 클래스일 지라도 서로 다른 패키지에 속하면 패키지명으로 구별이 가능하다
	  
	  	클래스가 물리적으로 하나의 클래스파일(.class)인 것과 같이
	  	패키지는 물리적으로 하나의 디렉토리이다
	  
	  	- 하나의 소스파일에는 첫 번째 문장으로 단 한 번의 패키지 선언만을 허용한다.
	  	- 모든 클래스는 반드시 하나의 패키지에 속해야 한다.
	  	- 패키지는 점(.)을 구분자로 하여 계층구조로 구성할 수 있다.(의미가 달라지면 .을 찍는다.)
	  	- 패키지는 물리적으로 클래스 파일(.class)을 포함하는 하나의 디렉토리이다.
	  	
	  	--------------------------------------------------------------------
	  	
	  	패키지 선언문은 반드시 소스파일에서 첫 번째 문장이어야 하며
	  	하나의 소스파일에 단 한번만 선언될 수 있다.
	  	
	  	패키지명은 대소문자를 모두 허용하지만, 클래스명과 쉽게 구분하기 위해서
	  	소문자로 하는 것을 원칙으로 하고 있다.
	  	
	  	모든 클래스는 반드시 하나의 패키지에 포함되어야 한다.
	  	
	  	import문
	  	소스코드를 작성할 때 다른 패키지의 클래스를 사용하려면
	  	패키지명이 포함된 클래스 이름을 사용해야 한다.
	  	하지만, 매번 패키지명을 붙여서 작성하기란 불편한 일이다.
	  	 
	  	클래스의 코드를 작성하기 전에 import문으로 사용하고자 하는
	  	클래스의 패키지를 미리 명시해주면 소스코드에 사용되는 클래스이름에서
	  	패키지명을 생략할 수 있다.
	  	
	  	이클립스 단축키 ctrl + shift + o를 누르면 자동으로 
	  	import 문을 추가해준다.
	  	
	  	import 선언 방법
	  	일반적인 소스파일(*.java)의 구성은 다음의 순서로 되어 있다.
	  	package문
	  	import문
	  	클래스 선언
	  	
	  	import 패키지명.클래스명;   //하나의 클래스를 불러온다.
	  	or
	  	import 패키지명.*;			//패키지에 속한 모든 클래스를 불러온다. (main 클래스 제외, 메인은 특별함)
	  	
	  	주의점
	  	import문에서 클래스의 이름 대신 *을 사용하는 것이
	  	하위 패키지의 클래스까지 포함하는 것이 아니다.
	  	import java.util.*;
	  	import java.text.*;
	  	
	  	위를 아래 처럼 표기
	  	import java.*;
	  	
	  	위와 아래는 다르다.
	  	
	  
		 */
	}
}
